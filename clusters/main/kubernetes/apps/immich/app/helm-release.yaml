---
# yaml-language-server: schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  interval: 15m
  chart:
    spec:
      chart: immich
      version: 25.0.1
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      stopAll: false
    TZ: America/Chicago
    # resources:    
    #   requests:
    #     cpu: 50m
    credentials:
      s3:
        type: s3
        url: "${MINIO_S3URL}"
        bucket: "${MINIO_S3PREFIX}-immich"
        accessKey: "${MINIO_S3ID}"
        secretKey: "${MINIO_S3KEY}"
        encrKey: "${MINIO_S3KEY}"       
    ingress:
      main:
        enabled: true
        ingressClassName: external
        hosts:
          - host: pics.${DOMAIN_1}
        integrations:
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
          # nginx:
          #   enabled: true
          #   auth:
          #     type: "authentik"
          #     internalHost: "authentik-http.authentik.svc.cluster.local:10230"
          #     externalHost: "pics.${DOMAIN_1}"              
    persistence:
      profile:
        storageClass: ceph-filesystem
        size: 1Gi
        accessModes:
          - ReadWriteMany        
        volsync:
          - name: prf
            type: restic
            credentials: s3
            dest:
              volumeSnapshotClassName: ceph-filesystem
              enabled: true
            src:
              volumeSnapshotClassName: ceph-filesystem
              enabled: true
      thumbs:
        storageClass: ceph-filesystem
        size: 50Gi
        accessModes:
          - ReadWriteMany        
        volsync:
          - name: thn
            type: restic
            credentials: s3
            dest:
              volumeSnapshotClassName: ceph-filesystem
              enabled: true
            src:
              volumeSnapshotClassName: ceph-filesystem
              enabled: true
      # thumbs:
      #   type: nfs
      #   server: ${TRUENAS_IP}
      #   path: /mnt/data1/immich/thumbs
      backups:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/data1/immich/backups
      library:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/data1/immich/library
      uploads:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/data1/immich/upload
      video:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/data1/immich/encoded-video

      external-pics:
        enabled: true
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/data1/media
        mountPath: /usr/src/app/external
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}

    cnpg:
      main:
        mode: recovery  # Set to 'recovery' when recovery from S3, also change the revisions 
        backups:
          enabled: true  # Set to 'false' when performing new install (recovery)
          credentials: s3
          retentionPolicy: "7d"
          revision: "3"
        recovery:
          method: object_store
          credentials: s3
          revision: "2"

    workload:
      main:
        podSpec:
          containers:
            main:
              resources:
                limits:
                  gpu.intel.com/i915: 1
    
    # resources:
    #   limits:
    #     gpu.intel.com/i915: 1
    #     cpu: 1000m

    # workload:
    #   main:
    #     replicas: 0    