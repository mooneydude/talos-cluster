---
# yaml-language-server: schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: docuseal
  namespace: docuseal
spec:
  interval: 15m
  chart:
    spec:
      chart: docuseal
      version: 5.6.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn  
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      stopAll: false
    credentials:
      s3:
        type: s3
        url: "${MINIO_S3URL}"
        bucket: "${MINIO_S3PREFIX}-docuseal"
        accessKey: "${MINIO_S3ID}"
        secretKey: "${MINIO_S3KEY}"
        encrKey: "${MINIO_S3KEY}"
    TZ: America/Chicago
    resources:
      requests:
        cpu: 10m
    env:
      # Comprehensive OAuth2 and Authentication Configuration
      AUTHENTICATION_METHOD: "oauth2"
      OAUTH2_ENABLED: "true"
      OAUTH2_PROVIDER: "authentik"
      OAUTH2_CLIENT_ID: "${DOCUSEAL_OAUTH_CLIENT_ID}"
      OAUTH2_CLIENT_SECRET: "${DOCUSEAL_OAUTH_CLIENT_SECRET}"
      OAUTH2_AUTHORIZE_URL: "https://auth.${DOMAIN_1}/application/o/authorize/"
      OAUTH2_TOKEN_URL: "https://auth.${DOMAIN_1}/application/o/token/"
      OAUTH2_USERINFO_URL: "https://auth.${DOMAIN_1}/application/o/userinfo/"
      OAUTH2_CALLBACK_URL: "https://sign.${DOMAIN_4}/oauth2/callback"
      SKIP_SETUP: "true"
      SKIP_LOGIN: "true"
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: sign.${DOMAIN_4}
            paths:
              - path: /
                pathType: Prefix
        annotations:
          # Authentik OAuth2 and Authentication Annotations
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${DOMAIN_1}/outpost.goauthentik.io/auth/nginx"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${DOMAIN_1}/login?rd=$escaped_request_uri"
        integrations:
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
          nginx:
            enabled: true
            auth:
              type: "authentik"
              internalHost: "authentik-http.authentik.svc.cluster.local:10230"
              externalHost: "sign.${DOMAIN_4}"
    # Authentik Integration Configuration
    authentik:
      enabled: true
      outpost:
        type: proxy
        serviceName: authentik-outpost
        servicePort: 9000
    persistence:
      data:
        storageClass: ceph-filesystem
        size: 10Gi
        accessModes:
          - ReadWriteMany
        volsync:
          - name: data
            type: restic
            credentials: s3
            dest:
              volumeSnapshotClassName: ceph-filesystem
              enabled: true
            src:
              volumeSnapshotClassName: ceph-filesystem
              enabled: true
              trigger:
                schedule: "15 15 * * *"
    cnpg:
      main:
        # mode: recovery   # Set to 'recovery' when recovery from S3, also change the revisions 
        backups:
          enabled: true  # Set to 'false' when performing new install (recovery)
          credentials: s3
          scheduledBackups:
            - name: daily-backup
              schedule: "0 15 15 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false
          revision: "1"
        recovery:
          method: object_store
          credentials: s3
          revision: ""
