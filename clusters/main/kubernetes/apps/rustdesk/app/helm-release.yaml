---
# yaml-language-server: schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rustdesk
  namespace: rustdesk
spec:
  interval: 15m
  chart:
    spec:
      chart: rustdesk
      version: 2.3.2
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    global:
      stopAll: false
    credentials:
      s3:
        type: s3
        url: "${MINIO_S3URL}"
        bucket: "${MINIO_S3PREFIX}-rustdesk"
        accessKey: "${MINIO_S3ID}"
        secretKey: "${MINIO_S3KEY}"
        encrKey: "${MINIO_S3KEY}"
    TZ: America/Chicago
    portal:
      open:
        enabled: false
    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                RELAY: "support.${DOMAIN_4}:21117"
                KEY: ""
    service:
      main:
        loadBalancerIP: ${RUSTDESK_IP}
        type: LoadBalancer
        integrations:
          metallb:
            enabled: true
        ports:
          main:
            enabled: true
            port: 21117
            protocol: tcp
            targetPort: 21117            
    persistence:
      data:
        storageClass: ceph-filesystem
        size: 10Gi
        accessModes:
          - ReadWriteMany        
        volsync:
        - name: data
          type: restic
          credentials: s3
          dest:
            volumeSnapshotClassName: ceph-filesystem
            enabled: true
          src:
            volumeSnapshotClassName: ceph-filesystem 
            enabled: true
            trigger:
              schedule: "0 15 * * *"        
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
          nginx.ingress.kubernetes.io/websocket-services: "stun-turn"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"              
        hosts:
          - host: support.${DOMAIN_4}
        integrations:
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod         
